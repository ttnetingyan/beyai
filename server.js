import express from "express";
import cors from "cors";
import fetch from "node-fetch";
import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";

dotenv.config();

const app = express();
app.use(express.json({ limit: "50mb" }));

const frontendUrl = process.env.FRONTEND_URL || '*'; 
app.use(cors({ origin: frontendUrl }));

let COLAB_URL = process.env.COLAB_URL || "";

// ESM iÃ§in __dirname tanÄ±mÄ±
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// --- 1. Statik Dosya Sunumu ---
// Ana klasÃ¶rdeki tÃ¼m dosyalarÄ± (index.html, vb.) sunar.
app.use(express.static(__dirname));

// KÃ¶k adrese gelen istek iÃ§in index.html dosyasÄ±nÄ± gÃ¶nderir
app.get("/", (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// --- 2. Proxy MantÄ±ÄŸÄ± ---

// Colab'Ä±n URL bildirdiÄŸi endpoint
app.post("/api/setcolab", (req, res) => {
Â  const { url } = req.body;
Â  COLAB_URL = url;
Â  console.log(`ðŸ”— Yeni Colab URL alÄ±ndÄ±: ${COLAB_URL}`);
Â  res.json({ ok: true, url: COLAB_URL });
});

// Video Ã¼retim endpoint'i
app.post("/api/generate", async (req, res) => {
Â  try {
Â  Â  if (!COLAB_URL) {
Â  Â  Â  return res.status(503).json({ 
        error: "Colab baÄŸlÄ± deÄŸil.", 
        hint: "Colab not defterinin Ã§alÄ±ÅŸtÄ±ÄŸÄ±ndan emin olun." 
      });
    }
    
Â  Â  const colabResponse = await fetch(`${COLAB_URL}/api/generate`, {
Â  Â  Â  method: "POST",
Â  Â  Â  headers: { "Content-Type": "application/json" },
Â  Â  Â  body: JSON.stringify(req.body),
Â  Â  });

Â  Â  const result = await colabResponse.json();

    if (!colabResponse.ok) {
        return res.status(colabResponse.status).json(result);
    }
    
Â  Â  res.json(result);
Â  } catch (err) {
Â  Â  res.status(500).json({ error: `Proxy yÃ¶nlendirme hatasÄ±: ${err.message}` });
Â  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
Â  console.log(`ðŸš€ Sunucu Ã§alÄ±ÅŸÄ±yor, port: ${PORT}`);
});
